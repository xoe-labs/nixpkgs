imports = [ "git.hooks" ]

[devshell]
name = "nixpkgs"
packages = [
  "fd",
  "nixpkgs-fmt",
  "editorconfig-checker",
]

[[commands]]
package = "editorconfig-checker"
category = "linters"

[[commands]]
name = "fmt"
help = "Check Nix formatting"
category = "folder tree checks"
command = "nixpkgs-fmt ${@} ."

[[commands]]
name = "evalnix"
help = "Check Nix parsing"
category = "folder tree checks"
command = "fd --extension nix --exec nix-instantiate --parse --quiet {} >/dev/null"

[git.hooks]
enable = true
pre-commit.text = """
#!/usr/bin/env bash
set -eou pipefail
if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  against=$(${git}/bin/git hash-object -t tree /dev/null)
fi

diff="git diff-index --name-only --cached $against --diff-filter d"

nix_files=($($diff -- '*.nix'))
all_files=($($diff))

# Format staged nix files.
if [[ -n "${nix_files[@]}" ]]; then
  nixpkgs-fmt "${nix_files[@]}"
  git add "${nix_files[@]}"
fi

# check editorconfig
if ! editorconfig-checker -- "${all_files[@]}"; then
  printf "%b\n" \
    "\nCode is not aligned with .editorconfig" \
    "Review the output and commit your fixes" >&2
  exit 1
fi
"""
